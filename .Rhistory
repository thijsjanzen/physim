ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
found %>%
gather(key = "model", value = "num_lin", -c(physim, DDD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
tree1
tree2
library(physim)
tree1 <- physim::dd_sim_R(c(lambda, mu, K), age = max_t, num_lin = focal_lin)$tes
L
num_extant_lin <- length(L[, 4] == -1)
num_extant_lin
tes = treestats::l_to_phylo(L, drop_extinct = TRUE)
tes
tas = treestats::l_to_phylo(L, drop_extinct = FALSE)
tas
L
library(physim)
tree1 <- physim::dd_sim_R(c(lambda, mu, K), age = max_t, num_lin = focal_lin)$tes
L
L[, 1] = age - c(L[, 1])
L
notmin1 = which(L[, 4] != -1)
notmin1
L[notmin1, 4] = age - c(L[notmin1, 4])
L
length(L[, 1])
length(notmin1)
79 - 19
num_extant_lin <- sum(L[, 4] == -1)
num_extant_lin
length(L[, 1]) - length(notmin1)
library(physim)
lambda <- 0.5
mu <- 0.1
focal_lin <- 100
K <- focal_lin * 1.2
max_t <- 10
tree1 <- physim::dd_sim_R(c(lambda, mu, K), age = max_t, num_lin = focal_lin)$tes
tree2 <- physim::sim_ddd(lambda = lambda, mu = mu, K = K, max_t = max_t,
num_species = focal_lin)
tree1
tree2
found <- c()
num_repl <- 1000
pb <- txtProgressBar(max = num_repl, style = 3)
for (r in 1:num_repl) {
t1 <- Sys.time()
tree1 <- physim::dd_sim_R(c(lambda, mu, K), age = max_t, num_lin = focal_lin)$tes
t2 <- Sys.time()
tree2 <- physim::sim_ddd(lambda = lambda, mu = mu, K = K, max_t = max_t,
num_species = focal_lin)
t3 <- Sys.time()
to_add <- c(length(tree1$tip.label), length(tree2$tip.label),
difftime(t2, t1, "secs"),
difftime(t3, t2, "secs"))
#  cat(to_add, "\n")
found <- rbind(found, to_add)
setTxtProgressBar(pb, r)
}
colnames(found) <- c("physim", "DDD", "ddd_r", "physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
found %>%
gather(key = "model", value = "num_lin", -c(t_physim, t_ddd)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
found
colnames(found) <- c("physim", "DDD", "t_ddd_r", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
found %>%
gather(key = "model", value = "num_lin", -c(t_physim_rcpp, t_ddd_r)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
found %>%
gather(key = "model", value = "num_lin", -c(physim, DDD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
microbenchmark::microbenchmark(physim::sim_ddd(lambda, mu, K, max_t),
DDD::dd_sim(pars = c(lambda, mu, K), age = max_t)$tes)
PBD::pbd_sim
PBD::pbd_sim()
PBD::pbd_sim
?PBD::pbd_sim
library(physim)
require(tidyverse)
require(physim)
lambda0 <- 1
mu0 <- 0
lambda1 <- 0
mu1 <- 0
trans_rate <- 1
max_t <- 10
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
focal_tree
max_t <- 5
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
focal_tree
found <- c()
for (r in 1:100) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
library(physim)
found <- c()
for (r in 1:100) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_ddd_r)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
found <- c()
for (r in 1:1000) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
lambda0 <- 1
mu0 <- 0
lambda1 <- 0
mu1 <- 0
trans_rate <- 10
max_t <- 5
found <- c()
for (r in 1:1000) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
found <- c()
for (r in 1:100) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
found <- c()
for (r in 1:1000) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
require(tidyverse)
require(physim)
lambda0 <- 1
mu0 <- 0
lambda1 <- 0
mu1 <- 1.0
trans_rate <- 10
max_t <- 5
found <- c()
for (r in 1:1000) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
require(tidyverse)
require(physim)
lambda0 <- 1
mu0 <- 0
lambda1 <- 0
mu1 <- 0.0
trans_rate <- 0.1
max_t <- 5
found <- c()
for (r in 1:1000) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
lambda0 <- 1
mu0 <- 0
lambda1 <- 1
mu1 <- 0.0
trans_rate <- 1
max_t <- 5
found <- c()
for (r in 1:1000) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
found <- c()
for (r in 1:100) {
t1 <- Sys.time()
focal_tree <- PBD::pbd_sim(pars = c(lambda0,
trans_rate,
lambda1,
mu0,
mu1),
age = max_t,
soc = 2,
plotit = FALSE)$stree_random
t2 <- Sys.time()
focal_tree2 <- physim::sim_pbd(lambda0 = lambda0,
mu0 = mu0,
lambda1 = lambda1,
mu1 = mu1,
completion_rate = trans_rate,
max_t = max_t)
t3 <- Sys.time()
to_add <- c(length(focal_tree$tip.label), length(focal_tree2$tip.label),
difftime(t2, t1, units = "secs"),
difftime(t3, t2, units = "secs"))
cat(to_add, "\n")
found <- rbind(found, to_add)
}
colnames(found) <- c("PBD", "physim", "t_PBD", "t_physim_rcpp")
library(tidyverse)
found <- as_tibble(found)
p1 <- found %>%
gather(key = "model", value = "num_lin", -c(t_PBD, t_physim_rcpp)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10()
p2 <- found %>%
gather(key = "model", value = "num_lin", -c(physim, PBD)) %>%
ggplot(aes(x = num_lin, fill = model)) +
geom_density(alpha = 0.5) +
scale_x_log10() +
xlab("runtime")
egg::ggarrange(p1, p2)
library(physim)
library(physim)
